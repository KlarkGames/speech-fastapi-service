version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: docker/Dockerfile.app
    ports:
      - "8000:8000"
    environment:
      - APP_HOST=0.0.0.0
      - APP_PORT=8000
      - DATABASE_URL=sqlite:///./app.db
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - S3_HOST=minio
      - S3_PORT=9000
      - S3_ACCESS_KEY=minioadmin
      - S3_SECRET_KEY=minioadmin
      - S3_REGION=us-east-1
      - S3_UPLOADS_BUCKET=audio-uploads
      - S3_RESULTS_BUCKET=audio-results
      - DEFAULT_MODEL_DEVICE=cpu
    volumes:
      - ./app.db:/app/app.db
    depends_on:
      - redis
      - minio
      - worker
    restart: unless-stopped

  worker:
    build:
      context: .
      dockerfile: docker/Dockerfile.worker
    environment:
      - DATABASE_URL=sqlite:///./app.db
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - S3_HOST=minio
      - S3_PORT=9000
      - S3_ACCESS_KEY=minioadmin
      - S3_SECRET_KEY=minioadmin
      - S3_REGION=us-east-1
      - S3_UPLOADS_BUCKET=audio-uploads
      - S3_RESULTS_BUCKET=audio-results
      - DEFAULT_MODEL_DEVICE=cpu
    volumes:
      - ./app.db:/app/app.db
    depends_on:
      - redis
      - minio
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    command: redis-server --appendonly yes

  minio:
    image: minio/minio:latest
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    entrypoint: sh
    command: >
      -c 'mkdir -p /data/audio-uploads && mkdir -p /data/audio-results && minio server /data --console-address ":9001"'
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

volumes:
  redis_data:
  minio_data: 